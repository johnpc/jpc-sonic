name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

env:
  DOCKER_IMAGE: mrorbitman/jpc-sonic
  REGISTRY: docker.io

jobs:
  release-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Determine release tag
      id: tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          echo "prerelease=${{ github.event.inputs.prerelease }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          echo "prerelease=${{ github.event.release.prerelease }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Extract metadata for release
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=raw,value=${{ steps.tag.outputs.tag }}
          type=raw,value=latest,enable=${{ steps.tag.outputs.prerelease == 'false' }}
          type=raw,value=stable,enable=${{ steps.tag.outputs.prerelease == 'false' }}
        labels: |
          org.opencontainers.image.title=Amazon Nova Sonic App
          org.opencontainers.image.description=Real-time audio streaming with AWS Bedrock Nova Sonic integration
          org.opencontainers.image.vendor=mrorbitman
          org.opencontainers.image.licenses=MIT
          org.opencontainers.image.version=${{ steps.tag.outputs.tag }}
          
    - name: Build and push release image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Create release notes
      run: |
        cat > release-notes.md << 'EOF'
        # 🚀 Amazon Nova Sonic App ${{ steps.tag.outputs.tag }}
        
        ## Docker Image
        
        ```bash
        docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.tag }}
        ```
        
        ## Quick Start
        
        ```bash
        # Using docker-compose
        curl -O https://raw.githubusercontent.com/mrorbitman/jpc-sonic-app/main/docker-compose.yml
        docker-compose up
        
        # Using docker run
        docker run -p 3000:3000 -p 8080:8080 \
          -v ~/.aws:/root/.aws:ro \
          -e AWS_PROFILE_NAME=your-profile \
          ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.tag }}
        ```
        
        ## Features
        
        - 🎤 Real-time audio streaming with WebSocket
        - 🤖 Amazon Nova Sonic model integration
        - 🌐 Dual-port setup (Frontend: 8080, API: 3000)
        - 🔐 AWS credentials support (profiles + env vars)
        - 🏥 Built-in health checks
        - 🐳 Multi-architecture support (amd64, arm64)
        
        ## Configuration
        
        | Environment Variable | Description | Default |
        |---------------------|-------------|---------|
        | `AWS_PROFILE_NAME` | AWS profile to use | - |
        | `AWS_ACCESS_KEY_ID` | AWS access key | - |
        | `AWS_SECRET_ACCESS_KEY` | AWS secret key | - |
        | `SYSTEM_PROMPT` | Custom AI system prompt | - |
        | `ALLOWED_ORIGINS` | CORS allowed origins | localhost:8080 |
        
        ## Access Points
        
        - **Frontend**: http://localhost:8080
        - **WebSocket API**: http://localhost:3000
        - **Health Check**: http://localhost:3000/socket.io/
        
        ## Documentation
        
        - [Docker Guide](https://github.com/mrorbitman/jpc-sonic-app/blob/main/DOCKER.md)
        - [README](https://github.com/mrorbitman/jpc-sonic-app/blob/main/README.md)
        EOF
        
    - name: Generate deployment summary
      run: |
        echo "## 🎉 Release ${{ steps.tag.outputs.tag }} Deployed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Docker Image:** \`${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Release Type:** ${{ steps.tag.outputs.prerelease == 'true' && 'Pre-release' || 'Stable Release' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tags pushed:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
